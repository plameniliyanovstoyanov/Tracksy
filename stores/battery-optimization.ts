import * as Battery from 'expo-battery';
import * as Location from 'expo-location';
import * as Notifications from 'expo-notifications';
import { Platform, Linking } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { create } from 'zustand';
import { combine } from 'zustand/middleware';

interface BatteryState {
  batteryLevel: number;
  isLowPowerMode: boolean;
  locationUpdateInterval: number;
  locationAccuracy: Location.LocationAccuracy;
  adaptiveMode: boolean; // –í–∏–Ω–∞–≥–∏ false - –ø—Ä–µ–º–∞—Ö–Ω–∞—Ç –∞–¥–∞–ø—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º
}

interface BatteryActions {
  initializeBatteryOptimization: () => Promise<void>;
  updateBatteryLevel: (level: number) => void;
  setAdaptiveMode: (enabled: boolean) => void; // –í–∏–Ω–∞–≥–∏ —â–µ –≤—Ä—ä—â–∞ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
  getOptimalLocationSettings: () => { interval: number; accuracy: Location.LocationAccuracy };
  requestBatteryOptimizationDisable: () => Promise<void>;
  showBatteryOptimizationInstructions: () => Promise<void>;
  requestAlwaysLocationPermission: () => Promise<boolean>;
}

const BATTERY_THRESHOLDS = {
  CRITICAL: 0.1,  // 10%
  LOW: 0.2,       // 20%
  MEDIUM: 0.5,    // 50%
  HIGH: 0.8,      // 80%
};

// –ü—Ä–µ–º–∞—Ö–Ω–∞—Ç –∞–¥–∞–ø—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º - –≤–∏–Ω–∞–≥–∏ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
const LOCATION_SETTINGS = {
  MAX_ACCURACY: {
    interval: 1000,  // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
    accuracy: Location.Accuracy.BestForNavigation,
  },
};

export const useBatteryOptimization = create(
  combine(
    {
      batteryLevel: 1,
      isLowPowerMode: false,
      locationUpdateInterval: 1000, // –í–∏–Ω–∞–≥–∏ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
      locationAccuracy: Location.Accuracy.BestForNavigation,
      adaptiveMode: false, // –ü—Ä–µ–º–∞—Ö–Ω–∞—Ç –∞–¥–∞–ø—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º
    } as BatteryState,
    (set, get) => ({
      initializeBatteryOptimization: async () => {
        try {
          if (Platform.OS === 'web') {
            console.log('Battery optimization not available on web');
            return;
          }

          // –ü—Ä–µ–º–∞—Ö–Ω–∞—Ç –∞–¥–∞–ø—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º - –≤–∏–Ω–∞–≥–∏ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
          const adaptiveMode = false; // –í–∏–Ω–∞–≥–∏ –∏–∑–∫–ª—é—á–µ–Ω
          
          // –ü–æ–ª—É—á–∞–≤–∞–º–µ —Ç–µ–∫—É—â–æ—Ç–æ –Ω–∏–≤–æ –Ω–∞ –±–∞—Ç–µ—Ä–∏—è—Ç–∞ (—Å–∞–º–æ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
          const batteryLevel = await Battery.getBatteryLevelAsync();
          const batteryState = await Battery.getBatteryStateAsync();
          const isLowPowerMode = await Battery.isLowPowerModeEnabledAsync();
          
          // –í–∏–Ω–∞–≥–∏ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
          const settings = LOCATION_SETTINGS.MAX_ACCURACY;
          
          set({
            batteryLevel: batteryLevel || 1,
            isLowPowerMode,
            adaptiveMode,
            locationUpdateInterval: settings.interval,
            locationAccuracy: settings.accuracy,
          });

          // –°–ª—É—à–∞–º–µ –∑–∞ –ø—Ä–æ–º–µ–Ω–∏ –≤ –±–∞—Ç–µ—Ä–∏—è—Ç–∞
          const batteryLevelSubscription = Battery.addBatteryLevelListener(({ batteryLevel }) => {
            // –û–±–Ω–æ–≤—è–≤–∞–º–µ –Ω–∏–≤–æ—Ç–æ –Ω–∞ –±–∞—Ç–µ—Ä–∏—è—Ç–∞, –Ω–æ –≤–∏–Ω–∞–≥–∏ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
            set({ batteryLevel });
            const settings = LOCATION_SETTINGS.MAX_ACCURACY;
            set({
              locationUpdateInterval: settings.interval,
              locationAccuracy: settings.accuracy,
            });
            console.log(`Battery level: ${(batteryLevel * 100).toFixed(0)}%, using max GPS accuracy`);
          });

          const lowPowerSubscription = Battery.addLowPowerModeListener(({ lowPowerMode }) => {
            set({ isLowPowerMode: lowPowerMode });
            
            // –í–∏–Ω–∞–≥–∏ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∂–∏–º–∞ –Ω–∞ –±–∞—Ç–µ—Ä–∏—è—Ç–∞
            const settings = LOCATION_SETTINGS.MAX_ACCURACY;
            set({
              locationUpdateInterval: settings.interval,
              locationAccuracy: settings.accuracy,
            });
          });

          // –ó–∞–ø–∞–∑–≤–∞–º–µ subscriptions –∑–∞ –ø–æ-–∫—ä—Å–Ω–æ –ø–æ—á–∏—Å—Ç–≤–∞–Ω–µ
          // –í —Ä–µ–∞–ª–Ω–∞ –∏–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ü–∏—è —Ç—Ä—è–±–≤–∞ –¥–∞ –≥–∏ –ø–æ—á–∏—Å—Ç–∏–º –ø—Ä–∏ unmount
          
          console.log(`Battery optimization initialized: ${(batteryLevel * 100).toFixed(0)}% battery`);
        } catch (error) {
          console.error('Failed to initialize battery optimization:', error);
        }
      },

      updateBatteryLevel: (level: number) => {
        set({ batteryLevel: level });
        
        // –í–∏–Ω–∞–≥–∏ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –Ω–∏–≤–æ—Ç–æ –Ω–∞ –±–∞—Ç–µ—Ä–∏—è—Ç–∞
        const settings = LOCATION_SETTINGS.MAX_ACCURACY;
        set({
          locationUpdateInterval: settings.interval,
          locationAccuracy: settings.accuracy,
        });
        
        console.log(`Battery level: ${(level * 100).toFixed(0)}%, using max GPS accuracy`);
      },

      setAdaptiveMode: async (enabled: boolean) => {
        try {
          // –í–∏–Ω–∞–≥–∏ –∏–∑–∫–ª—é—á–µ–Ω –∞–¥–∞–ø—Ç–∏–≤–µ–Ω —Ä–µ–∂–∏–º
          await AsyncStorage.setItem('battery-adaptive-mode', 'false');
          set({ adaptiveMode: false });
          
          // –í–∏–Ω–∞–≥–∏ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
          const settings = LOCATION_SETTINGS.MAX_ACCURACY;
          set({
            locationUpdateInterval: settings.interval,
            locationAccuracy: settings.accuracy,
          });
          
          console.log('Adaptive mode disabled - always using max accuracy');
        } catch (error) {
          console.error('Failed to set adaptive mode:', error);
        }
      },

      getOptimalLocationSettings: () => {
        // –í–∏–Ω–∞–≥–∏ –≤—Ä—ä—â–∞–º–µ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç
        return LOCATION_SETTINGS.MAX_ACCURACY;
      },

      requestBatteryOptimizationDisable: async () => {
        try {
          if (Platform.OS === 'android') {
            // –ü–æ–∫–∞–∑–≤–∞–º–µ –¥–µ—Ç–∞–π–ª–Ω–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∑–∞ –∏–∑–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ battery optimization
            await Notifications.scheduleNotificationAsync({
              content: {
                title: 'üîã –í–ê–ñ–ù–û: –ò–∑–∫–ª—é—á–µ—Ç–µ Battery Optimization',
                body: '–ó–∞ –º–∞–∫—Å–∏–º–∞–ª–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç –Ω–∞ GPS:\n\n1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n2. Speed Tracker ‚Üí –ë–∞—Ç–µ—Ä–∏—è\n3. "–ù–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–π"\n4. –†–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ\n\n–ë–µ–∑ —Ç–æ–≤–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –Ω—è–º–∞ –¥–∞ —Ä–∞–±–æ—Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ –≤ background!',
                data: { type: 'battery-optimization-critical' },
                sound: true,
                priority: 'max',
                sticky: true,
              },
              trigger: null,
            });

            // –û–ø–∏—Ç–≤–∞–º–µ —Å–µ –¥–∞ –æ—Ç–≤–æ—Ä–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ –∑–∞ battery optimization
            try {
              await Linking.openSettings();
            } catch (linkError) {
              console.log('Could not open settings automatically');
            }
          }
        } catch (error) {
          console.error('Failed to request battery optimization disable:', error);
        }
      },

      showBatteryOptimizationInstructions: async () => {
        try {
          await Notifications.scheduleNotificationAsync({
            content: {
              title: '‚ö° –ú–∞–∫—Å–∏–º–∞–ª–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–Ω–æ—Å—Ç',
              body: '–ó–∞ –Ω–∞–π-–¥–æ–±—Ä–∞ —Ä–∞–±–æ—Ç–∞:\n\nüì± Android:\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ë–∞—Ç–µ—Ä–∏—è ‚Üí –ù–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–π\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Üí –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç: –í–ö–õ\n\nüçé iOS:\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª–Ω–æ—Å—Ç ‚Üí –í–∏–Ω–∞–≥–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ë–∞—Ç–µ—Ä–∏—è ‚Üí –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è',
              data: { type: 'performance-instructions' },
              sound: false,
              priority: 'high',
            },
            trigger: null,
          });
        } catch (error) {
          console.error('Failed to show battery optimization instructions:', error);
        }
      },

      requestAlwaysLocationPermission: async () => {
        try {
          if (Platform.OS === 'web') {
            console.log('Location permissions not applicable on web');
            return false;
          }

          // –ü—ä—Ä–≤–æ –∏—Å–∫–∞–º–µ foreground —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
          const { status: foregroundStatus } = await Location.requestForegroundPermissionsAsync();
          if (foregroundStatus !== 'granted') {
            await Notifications.scheduleNotificationAsync({
              content: {
                title: 'üìç –ù—É–∂–Ω–æ –µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∑–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
                body: '–ú–æ–ª—è, —Ä–∞–∑—Ä–µ—à–µ—Ç–µ –¥–æ—Å—Ç—ä–ø –¥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –∑–∞ –¥–∞ —Ä–∞–±–æ—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ.',
                data: { type: 'location-permission-required' },
                sound: true,
                priority: 'high',
              },
              trigger: null,
            });
            return false;
          }

          // –°–ª–µ–¥ —Ç–æ–≤–∞ –∏—Å–∫–∞–º–µ background —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (–≤–∏–Ω–∞–≥–∏)
          const { status: backgroundStatus } = await Location.requestBackgroundPermissionsAsync();
          if (backgroundStatus !== 'granted') {
            await Notifications.scheduleNotificationAsync({
              content: {
                title: 'üîÑ –ù—É–∂–Ω–æ –µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∑–∞ background –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
                body: '–ó–∞ —Ä–∞–±–æ—Ç–∞ –≤ background:\n\nüì± Android: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Üí Speed Tracker ‚Üí –†–∞–∑—Ä–µ—à–µ–Ω–∏—è ‚Üí –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ ‚Üí "–í–∏–Ω–∞–≥–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ"\n\nüçé iOS: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª–Ω–æ—Å—Ç ‚Üí –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ ‚Üí Speed Tracker ‚Üí "–í–∏–Ω–∞–≥–∏"',
                data: { type: 'background-location-required' },
                sound: true,
                priority: 'max',
                sticky: true,
              },
              trigger: null,
            });
            
            // –û–ø–∏—Ç–≤–∞–º–µ —Å–µ –¥–∞ –æ—Ç–≤–æ—Ä–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ
            try {
              await Linking.openSettings();
            } catch (linkError) {
              console.log('Could not open settings automatically');
            }
            
            return false;
          }

          console.log('‚úÖ All location permissions granted');
          return true;
        } catch (error) {
          console.error('Failed to request location permissions:', error);
          return false;
        }
      },
    } as BatteryActions)
  )
);